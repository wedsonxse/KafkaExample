version: '3.7'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka_network

  kafka:
    image: bitnami/kafka:latest
    #restart: on-failure
    ports:
      - 9092:9092
    expose:
      - 29092
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      #- KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_NUM_PARTITIONS=3
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - kafka_network

  init-kafka:
    image: bitnami/kafka:latest
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic topic-testing --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

  java_app:
    image: openjdk:17-jdk
    container_name: java_app
    working_dir: '/app'
    volumes:
      - ./.env:/app/.env
      - ./target/quickstart-0.0.1-SNAPSHOT.jar:/app/quickstart-0.0.1-SNAPSHOT.jar
    command: ["java", "-jar", "/app/quickstart-0.0.1-SNAPSHOT.jar"]
    depends_on:
      - kafka
    networks:
      - kafka_network

networks:
  kafka_network:
    driver: bridge
